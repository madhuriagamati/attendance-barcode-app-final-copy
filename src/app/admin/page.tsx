import { prisma } from '@/lib/db';
import dayjs from 'dayjs';
export const dynamic='force-dynamic';
export default async function AdminOverview(){const[studentCount,todayCount,total]=await Promise.all([prisma.student.count(),prisma.attendance.count({where:{timestamp:{gte:dayjs().startOf('day').toDate()}}}),prisma.attendance.count()]);const recent=await prisma.attendance.findMany({take:12,orderBy:{timestamp:'desc'},include:{student:true}});return(<div className="space-y-6"><div className="grid grid-cols-1 md:grid-cols-3 gap-4">{[["Students",studentCount],["Today's Check-ins",todayCount],["Total Attendance Logs",total]].map(([label,value],i)=>(<div key={i} className="bg-slate-900/60 rounded-xl p-5 border border-slate-800"><div className="text-slate-400 text-sm">{label as string}</div><div className="text-3xl font-semibold">{value as any}</div></div>))}</div><div className="bg-slate-900/60 rounded-xl p-5 border border-slate-800"><h2 className="text-lg font-semibold mb-3">Recent Activity</h2><div className="overflow-auto"><table className="table"><thead className="bg-slate-900/80 sticky top-0"><tr><th>Time</th><th>Student</th><th>Type</th><th>Barcode</th><th>Note</th></tr></thead><tbody>{recent.map(r=>(<tr key={r.id} className="hover:bg-slate-800/40"><td>{r.timestamp.toLocaleString('en-US')}</td><td>{r.student?.name}</td><td><span className="badge">{r.type}</span></td><td>{r.student?.barcode}</td><td>{r.notes||''}</td></tr>))}</tbody></table></div></div></div>);} 
